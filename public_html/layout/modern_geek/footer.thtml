{# begin {templatelocation} #}

      </div>
    </div>
    <!--[if !IE]> Using conditional comments to avoid Win IE 6 bugs <![endif]-->
    <!--[if !IE]> (When combined with multiple floating elements, floating bug duplicate last element content) <![endif]-->
    <!--[if !IE]> } #centerblocks <![endif]-->

    {left_blocks}

    <div style="clear: both;"></div>

  </div>
  <!-- } #wrapper -->


</div>

{!if right_blocks}
    <div id="footer-content" class="tm-footer">
      {right_blocks}
      <div style="clear: both"></div>
    </div>
{!endif}

  <!-- #footer { -->
  <footer id="footer">

    <div class="copyright">
        <div class="copyright_notice"><small>{copyright_notice}</small></div>
    </div>
    <div class="site_info">
        <span class="powered_by">{powered_by}&nbsp;<a href="http://www.geeklog.net/">Geeklog</a></span>&nbsp;<span class="execution_textandtime">{execution_textandtime}</span>
    </div>
  </footer>
  <!-- } #footer -->

<!-- } #container -->

<nav id="ivm-page-nav" class="uk-flex uk-flex-middle uk-flex-center">
<ul class="uk-dotnav uk-flex-column" data-uk-scrollspy-nav="{ closest:'li', smoothscroll:true}">
    <li><a href="#top"></a></li>
    <li><a href="#leftblocks"></a></li>
    <li><a href="#footer2"></a></li>
    <li><a href="#footer"></a></li>
</ul>
</nav>

{plg_footercode}

<!-- Front-end framework UIkit { -->
<script type="text/javascript" src="{layout_url}/vendor/uikit/js/uikit.js"></script>
<script src="{layout_url}/vendor/uikit/js/components/lightbox.js"></script>
<script src="{layout_url}/vendor/uikit/js/components/grid.js"></script>
<script src="{layout_url}/vendor/uikit/js/components/slideshow.js"></script>
<script src="{layout_url}/vendor/uikit/js/components/slideshow-fx.js"></script>
<script src="{layout_url}/vendor/uikit/js/components/slideset.js"></script>
<script src="{layout_url}/vendor/uikit/js/components/tooltip.js"></script>
<script src="{layout_url}/vendor/uikit/js/components/datepicker.js"></script>
<script src="{layout_url}/vendor/uikit/js/components/form-select.js"></script>
<!-- } Front-end framework UIkit -->

<!-- PDF図面表示 { -->
<script type="text/javascript" src="{layout_url}/vendor/jquery-gdocsviewer/jquery.gdocsviewer.min.js"></script>
<script type="text/javascript">
/*<![CDATA[*/
$(document).ready(function() {
  $('a.embed-large').gdocsViewer({width: 960, height: 600});
  $('a.embed-medium').gdocsViewer({width: 768, height: 500});
  $('a.embed-small').gdocsViewer({width: 300, height: 240});
  $('#embedURL').gdocsViewer();
});
/*]]>*/
</script>
<!-- } PDF図面表示 -->

<!-- jQuery isotope { -->
<script type="text/javascript" src="{layout_url}/vendor/jquery-isotope-site/jquery.isotope.min.js"></script>

<script>
$(function(){
var $container = $('#container-isotope');

// hover element
$container.delegate('.element', 'mouseenter', function () {
$('.name',this).fadeIn('slow');
});

$container.delegate('.element', 'mouseleave', function () {
$('.name',this).fadeOut('slow');
});
});
</script>



<script>
  $(function(){
   
    var $container = $('#container-isotope'),
        filters = {};

    $container.isotope({
      itemSelector : '.element',
      masonry: {
        columnWidth: 0
      }
    });

    // filter buttons
    $('.filter a').click(function(){
      var $this = $(this);
      // don't proceed if already selected
      if ( $this.hasClass('selected') ) {
        return;
      }
      
      var $optionSet = $this.parents('.option-set');
      // change selected class
      $optionSet.find('.selected').removeClass('selected');
      $this.addClass('selected');
      
      // store filter value in object
      // i.e. filters.color = 'red'
      var group = $optionSet.attr('data-filter-group');
      filters[ group ] = $this.attr('data-filter-value');
      // convert object into array
      var isoFilters = [];
      for ( var prop in filters ) {
        isoFilters.push( filters[ prop ] )
      }
      var selector = isoFilters.join('');
      $container.isotope({ filter: selector });

      return false;
    });

  });
</script>

<script>
  $(function(){
    
    var $container = $('#container-isotope');
    
    
      // add randomish size classes
      $container.find('.element').each(function(){
        var $this = $(this),
            number = parseInt( $this.find('.number').text(), 10 );
        if ( number % 7 % 2 === 1 ) {
          $this.addClass('width2');
        }
        if ( number % 3 === 0 ) {
          $this.addClass('height2');
        }
      });
    
    $container.isotope({
      itemSelector : '.element',
      masonry : {
        columnWidth : 20
      },
      masonryHorizontal : {
        rowHeight: 20
      },
      cellsByRow : {
        columnWidth : 20,
        rowHeight : 170
      },
      cellsByColumn : {
        columnWidth : 20,
        rowHeight : 170
      },
      getSortData : {
        symbol : function( $elem ) {
          return $elem.attr('data-symbol');
        },
        category : function( $elem ) {
          return $elem.attr('data-category');
        },
        number : function( $elem ) {
          return parseInt( $elem.find('.number').text(), 10 );
        },
        weight : function( $elem ) {
          return parseFloat( $elem.find('.weight').text().replace( /[\(\)]/g, '') );
        },
        name : function ( $elem ) {
          return $elem.find('.name').text();
        }
      }
    });
    
    
      var $optionSets = $('#options .option-set'),
          $optionLinks = $optionSets.find('a');

      $optionLinks.click(function(){
        var $this = $(this);
        // don't proceed if already selected
        if ( $this.hasClass('selected') ) {
          return false;
        }
        var $optionSet = $this.parents('.option-set');
        $optionSet.find('.selected').removeClass('selected');
        $this.addClass('selected');
  
        // make option object dynamically, i.e. { filter: '.my-filter-class' }
        var options = {},
            key = $optionSet.attr('data-option-key'),
            value = $this.attr('data-option-value');
        // parse 'false' as false boolean
        value = value === 'false' ? false : value;
        options[ key ] = value;
        if ( key === 'layoutMode' && typeof changeLayoutMode === 'function' ) {
          // changes in layout modes need extra logic
          changeLayoutMode( $this, options )
        } else {
          // otherwise, apply new options
          $container.isotope( options );
        }
        
        return false;
      });


    
      // change layout
      var isHorizontal = false;
      function changeLayoutMode( $link, options ) {
        var wasHorizontal = isHorizontal;
        isHorizontal = $link.hasClass('horizontal');

        if ( wasHorizontal !== isHorizontal ) {
          // orientation change
          // need to do some clean up for transitions and sizes
          var style = isHorizontal ? 
            { height: '80%', width: $container.width() } : 
            { width: 'auto' };
          // stop any animation on container height / width
          $container.filter(':animated').stop();
          // disable transition, apply revised style
          $container.addClass('no-transition').css( style );
          setTimeout(function(){
            $container.removeClass('no-transition').isotope( options );
          }, 100 )
        } else {
          $container.isotope( options );
        }
      }


    
      // change size of clicked element
      $container.delegate( '.element', 'click', function(){
        $(this).toggleClass('large');
        $container.isotope('reLayout');
      });

      // toggle variable sizes of all elements
      $('#toggle-sizes').find('a').click(function(){
        $container
          .toggleClass('variable-sizes')
          .isotope('reLayout');
        return false;
      });


    
      $('#insert a').click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.isotope( 'insert', $newEls );

        return false;
      });

      $('#append a').click(function(){
        var $newEls = $( fakeElement.getGroup() );
        $container.append( $newEls ).isotope( 'appended', $newEls );

        return false;
      });


    var $sortBy = $('#sort-by');
    $('#shuffle a').click(function(){
      $container.isotope('shuffle');
      $sortBy.find('.selected').removeClass('selected');
      $sortBy.find('[data-option-value="random"]').addClass('selected');
      return false;
    });


  });
</script>
<!-- } jQuery isotope -->

<!-- DataTables jQuery { -->
        <script type="text/javascript" language="javascript" src="{layout_url}/vendor/jquery-datatables/js/jquery.dataTables.min.js"></script>
	<script type="text/javascript" src="{layout_url}/vendor/jquery-datatables/js/numericComma.js"></script>

        <script type="text/javascript">
             $(document).ready( function() {
               $('#bukkendata').dataTable( {
		 "lengthMenu": [[-1], ["All"]],

    	 "bLengthChange": false,
		 "aoData": [
			{ "sType": "html" },
			{ "sType": "html" },
			{ "sType": "html" },
			{ "sType": "html" },
			{ "sType": "html" }
			],

               } );

               $('#memberlist').dataTable( {
		 "lengthMenu": [[-1], ["All"]],
	         "order": [[ 0, "desc" ]],
    		 "bLengthChange": true,
               } );


             } );
</script>
<!-- } DataTables jQuery -->





    {# Depending on the situation, HTML body element's class attribute to specify a value by JavaScript
       The argument from the left, the right block container, the middle block left the right block id attribute value #}
    <script type="text/javascript">
    <!--
    FixHTML('leftblocks', 'centerblocks', 'rightblocks');
    -->
    </script>    

</body>
</html>

{# end {templatelocation} #}
